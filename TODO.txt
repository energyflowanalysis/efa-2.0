# Code-Pflege
* Cabal reaktivieren
* Leerzeichen löschen
* Warnungen entfernen
* head / tail durch trustedHead oder errHead ersetzen // Concept
* foldl1 absichern
* nTrace consistent einführen, dass manuelles ein / ausschalten unterstützt
* Code-Richtlinien, Grep-Tools
* Import-Namen eindeutg und einheitlich
* Liste aller Laufzeitfehler mit Grep-Script
* Script um Modulnamen zu prüfen
* Script um Constraints Alphabetisch zu sortieren
* Fehlermeldungen bauen, die rauskompiliert werden können


# Installation / Cabal / Arbeitsprozess
*  Bibliotheken von HH und HT sicher stellen, Modifikationen
* Cabal Test Modus einsetzen, erweitern
* Bewusst Todo-Flag in den Code -> vor ort am besten, unterdifferenzieren ? 
* checkin - Flag, compilierbar, nicht ? 
* git bisect script, dass z.B. unkompilierbares ingnoriert


# Arbeitsumgebung
* Dev32 erstellen
* dev == maschine für kompilierung ?
* arbeitserver pro projekt

# Tests und Checks
* CheckListe erstellen
* Flowstatus-Test für eta korrigieren - OK
* Interpolation-Tests auf letzten Code-Stand anpassen
* Curven und Reverse-Curven testen
* EtaFunctions Test einpflegen
* Test für CurveModification schreiben
* Testabdeckung messen

# Referenz
* Alle Zwischenergebnisse abspeichern
* Referenz-Datensätze mit attic oder bup ablegen
* Referenz-Klassen für alle wichtigen Datentypen erstellen

# Plotten
* Zyklus in Surface-Diagramme einzeichnen
* plotEach in plotAction einbauen


# Checks:
* Eta-Check in Topologie korrigieren - OK
* NaN-Check einbauen
* Sink-Source check einbauen
* Total Time Check
* Total Energy Check

# Software - Konzeptuelle Probleme, Fragestellungen

* Division durch Null
* Interp.Val -> Value -> alles in Value einpacken ?
* signApprox bei der Erstellung der Null-Kanten läuft aktuell auf Energie-Basis -> Umstellung auf Leistungsbasis
* Standard-Vorzeichenrichtung muss sichtbar und klar definiert sein !!
* UpStream und DownStream bei EtaFunctions / Assignmap muss klar sein
* Umgang mit ungültigen Zuständen
* Verschiedene Container-Formen, Sweep

# Restrukturierung
* Umstellung des Zustandsflussgraphen auf absoluten Zustandsindex
* Zustandsflussgraph und Sequenzfluss-Graph -> Topologiekanten in Diagramm
* Constraints loswerden (Constrain-Salat)
* Schnittstellen-Modell
* Generischer Data-Vector für Solver
* Signal a b -> dynamisch, statisch typen
* Record -> Signal -> ND-Signal
* Cube, Sweep
* Wirklich flexible Plots

# Lästige Restriktionen
* Null Batterie-Leistung
* Null Demand-Leistung
* 1D-Problem - Cube plot 1d

# Features
* Balance-Loop abbrechen bei minimaler Differenz, besseres Ergebnis holen
* auf einen ausgewählten Wirkungsgrad optimieren
 * IGH-Farbscala wieder reaktivieren !!! 

# Funktionalität
* ND-Erproben
* Erweiterung auf n Speicher
* Zeit-Optimierung

# Alte Energieflussanalyse
* Range Arbeitet auf neuem Delta-Index, absolute Zeit auf altem -- wozu ist die absolute Zeit nötig ? 


# Bugs, Prüfen
* Die max-Iterations-Anzahl für den Balance-Loop stimmt nicht (1 -> 0,1,2) -- Fixed for one Storage, check for Multiple
* Nearest funktioniert nicht im Demand-Grid !?
* Leistungs-Basierte Interpolation testen und überarbeiten
* Fehlerhafter Wirkungsgrad beim Rechnen mit sehr kleinen Werten über eine positive Eins-Kennlinie (eta-Basiert)



