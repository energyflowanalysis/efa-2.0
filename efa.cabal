Name:                efa
Version:             2.1
Synopsis:            Energy flow analysis
Description:         Energy flow analysis
Homepage:            http://energiefluss.info/
License:             AllRightsReserved
License-File:        LICENSE
Author:              Ingenieurbüro Guttenberg & Hördegen
Maintainer:          guttenberg@energiefluss.info
-- Copyright:           
Category:            Engineering
Build-type:          Simple
Cabal-version:       >=1.8

Flag buildTests
  Description: build test suite (makes trouble with TemplateHaskell and dynamic linking)
  Default: True

Flag buildExamples
  Description: Build complex examples
  Default: True

Flag buildDemos
  Description: Build demonstrations of single library features
  Default: True

Flag buildTools
  Description: Build tools
  Default: True

Library
  Build-Depends:
    graphviz >=2999.13 && <2999.16,
    gnuplot >=0.5.2 && <0.6,
    colour >=2.3 && <2.4,
    vector ==0.9.*,
    set-cover >=0.0.3 && <0.1,
    fingertree-psqueue >=0.3 && <0.4,
    fingertree >=0.0 && <0.1,
    text ==0.11.*,
    pretty-show >=1.2 && <1.3,
    pretty ==1.1.*,
    random ==1.0.*,
    Stream >=0.4.6 && <0.5,
    non-empty >=0.2 && <0.3,
    containers >=0.4 && <0.6,
    data-accessor-transformers >=0.2.1 && <0.3,
    data-accessor >=0.2.2 && <0.3,
    utility-ht >=0.0.10 && <0.1,
    QuickCheck >=2.4 && <2.6,
    explicit-exception >=0.1.7 && <0.2,
    transformers >= 0.3 && < 0.4,
    unique-logic-tf >= 0.4 && < 0.5,
    parsec >=3.1 && <3.2,
    filepath >=1.3 && <1.4,
    base >=4.5 && <4.7
  Hs-Source-Dirs:      src
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs
  Exposed-Modules:
    EFA.IO.CSVImport
    EFA.IO.ASCIIImport
    EFA.IO.CSVParser
    EFA.IO.PLTImport
    EFA.IO.PLTParser
    EFA.IO.TableParserTypes
    EFA.IO.TableParser
    EFA.IO.Parser
    EFA.Utility
    EFA.Utility.Async
    EFA.Utility.Bifunctor
    EFA.Utility.Map
    EFA.Utility.Stream
    EFA.Utility.TotalMap
    EFA.Utility.Trace
    EFA.Utility.TypeConstructor
    EFA.Signal.Base
    EFA.Signal.Sequence
    EFA.Signal.Typ
    EFA.Signal.Data
    EFA.Signal.Vector
    EFA.Signal.Record
    EFA.Signal.Signal
    EFA.Signal.SignalFill
    EFA.Signal.Chop
    EFA.Signal.Colour
    EFA.Signal.Plot
    EFA.Signal.ConvertTable
    EFA.Symbolic.OperatorTree
    EFA.Symbolic.SumProduct
    EFA.Symbolic.Mixed
    EFA.Symbolic.Variable
    EFA.Report.Typ
    EFA.Report.Base
    EFA.Report.Report
    EFA.Report.Format
    EFA.Report.FormatValue
    EFA.Graph
    EFA.Graph.Topology
    EFA.Graph.Topology.Index
    EFA.Graph.Topology.Node
    EFA.Graph.Topology.Node.Int
    EFA.Graph.Topology.StateAnalysis
    EFA.Graph.Topology.Count
    EFA.Graph.Flow
    EFA.Equation.Result
    EFA.Equation.Unknown
    EFA.Equation.Record
    EFA.Equation.Variable
    EFA.Equation.Arithmetic
    EFA.Equation.MultiValue
    EFA.Equation.Stack
    EFA.Equation.Pair
    EFA.Equation.Verify
    EFA.Flow.PartMap
    EFA.Flow.StorageGraph
    EFA.Flow.StorageGraph.Quantity
    EFA.Flow.StorageGraph.EquationSystem
    EFA.Flow.Topology
    EFA.Flow.Topology.Index
    EFA.Flow.Topology.Variable
    EFA.Flow.Topology.Quantity
    EFA.Flow.Topology.Record
    EFA.Flow.Topology.EquationSystem
    EFA.Flow.Topology.Symbolic
    EFA.Flow.Topology.AssignMap
    EFA.Flow.Topology.Absolute
    EFA.Flow.Topology.NestedDelta
    EFA.Flow.SequenceState.Quantity
    EFA.Flow.SequenceState.EquationSystem
    EFA.Flow.Sequence
    EFA.Flow.Sequence.Index
    EFA.Flow.Sequence.Quantity
    EFA.Flow.Sequence.Record
    EFA.Flow.Sequence.EquationSystem
    EFA.Flow.Sequence.AssignMap
    EFA.Flow.Sequence.Absolute
    EFA.Flow.Sequence.SystemEta
    EFA.Flow.Sequence.Symbolic
    EFA.Flow.State
    EFA.Flow.State.Index
    EFA.Flow.State.Quantity
    EFA.Flow.State.EquationSystem
    EFA.Flow.State.Absolute
    EFA.Flow.State.SystemEta
    EFA.Flow.Cumulated.Index
    EFA.Flow.Cumulated.Variable
    EFA.Flow.Cumulated.Quantity
    EFA.Flow.Cumulated.EquationSystem
    EFA.Flow.Cumulated.Absolute
    EFA.Flow.SystemEta
    EFA.Flow.Draw
    EFA.Application.Utility
    EFA.Application.NestedDelta
    EFA.Application.AssignMap
    EFA.Application.Plot
    EFA.Application.Tree
    EFA.Application.Optimisation
    EFA.Application.Sweep
    EFA.Application.Simulation
    EFA.Application.OneStorage
    EFA.Example.Topology.LinearOne
    EFA.Example.Topology.LinearTwo
    EFA.Example.Topology.Tripod
    EFA.Example.Topology.Tripod.Given
    EFA.Example.Topology.Tripod.State
  Other-Modules:
    EFA.Equation.SystemRecord
    EFA.Flow.EquationSystem


-- sollte man auf Cabal-Test umstellen,
-- sobald Cabal-Test vernünftig läuft
Executable test-efa
  Main-Is: EFA/Test.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  Hs-Source-Dirs: test
  If flag(buildTests)
    Build-Depends:
      efa,
      quickcheck-properties >=0.1 && <0.2,
      -- alternative: checkers
      QuickCheck,
      containers,
      explicit-exception,
      utility-ht,
      template-haskell >=2.7 && <2.9,
      base
  Else
    Buildable: False
  Other-Modules:
    EFA.Test.Utility
    EFA.Test.Sequence
    EFA.Test.MultiValue
    EFA.Test.Stack
    EFA.Test.Arithmetic
    EFA.Test.EquationSystem
    EFA.Test.EquationSystem.Given
    EFA.Test.Tree
    EFA.TestUtility

Executable example-sequence-flow-graph
  Main-Is: examples/elementary/sequenceFlowGraph/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildExamples)
    Build-Depends:
      efa,
      utility-ht,
      base
  Else
    Buildable: False

Executable example-optimising-storage
  Main-Is: examples/elementary/optimisingStorage/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildExamples)
    Build-Depends:
      gnuplot,
      efa,
      vector,
      data-accessor,
      utility-ht,
      base
  Else
    Buildable: False

Executable example-optimal-storage-usage
  Main-Is: examples/elementary/optimalStorageUsage/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildExamples)
    Build-Depends:
      gnuplot,
      efa,
      vector,
      containers,
      data-accessor,
      utility-ht,
      non-empty,
      containers,
      base
  Else
    Buildable: False




Executable example-vehicle
  Hs-Source-Dirs: examples/vehicle/src
  Main-Is: Main.hs
  Other-Modules:
    Modules.Signals
    Modules.System
    Modules.Analysis
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildExamples)
    Build-Depends:
     efa,
      gnuplot,
      graphviz,
     utility-ht,
      containers,
      non-empty,
      filepath,
      base
  Else
    Buildable: False


Executable example-local-grid
  Hs-Source-Dirs: examples/energy/localGrid/src
  Main-Is: Main.hs
  Other-Modules:
    Modules.Signals
    Modules.System
    Modules.Analysis
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildExamples)
   Build-Depends:
      efa,
      gnuplot,
      graphviz,
      utility-ht,
     containers,
      non-empty,
      filepath,
      base
  Else
    Buildable: False


Executable example-local-grid-optimise
  Hs-Source-Dirs: examples/energy/localGrid/src
  Main-Is: Optimise.hs
  Other-Modules:
    Modules.Signals
    Modules.System
    Modules.Analysis
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildExamples)
    Build-Depends:
      efa,
      gnuplot,
      graphviz,
      utility-ht,
      containers,
      non-empty,
      filepath,
      vector,
      base
  Else
    Buildable: False

Executable example-building
  Hs-Source-Dirs: examples/building/src
  Main-Is: Main.hs
  Other-Modules:
    Modules.System
    Modules.Optimisation
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildExamples)
    Build-Depends:
      efa,
      gnuplot,
      graphviz,
      utility-ht,
      containers,
      non-empty,
      filepath,
      vector,
      base
  Else
    Buildable: False

Executable example-time
  Main-Is: examples/elementary/time/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildExamples)
    Build-Depends:
      efa,
      utility-ht,
      base
  Else
    Buildable: False

Executable example-two-ways
  Main-Is: examples/elementary/twoWays/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildExamples)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False



Executable demo-numeric-solving
  Main-Is: demo/numericSolving/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      graphviz,
      base
  Else
    Buildable: False

Executable demo-signal-solving
  Main-Is: demo/signalSolving/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-unknown-signal
  Main-Is: demo/unknownSignal/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      gnuplot,
      containers,
      base
  Else
    Buildable: False



Executable demo-tables
  Main-Is: demo/tables/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      gnuplot,
      non-empty,
      containers,
      base
  Else
    Buildable: False



Executable demo-symbolic-solving
  Main-Is: demo/symbolicSolving/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-symbolic-delta
  Main-Is: demo/symbolicDelta/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-additive-terms-dynamic
  Main-Is: demo/additiveTermsDynamic/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      gnuplot,
      non-empty,
      containers,
      utility-ht,
      base
  Else
    Buildable: False

Executable demo-additive-terms-static
  Main-Is: demo/additiveTermsStatic/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      gnuplot,
      non-empty,
      data-accessor,
      containers,
      utility-ht,
      base
  Else
    Buildable: False

Executable demo-signal-calc
  Main-Is: demo/signal/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      gnuplot,
      efa,
      gnuplot,
      utility-ht,
      base
  Else
    Buildable: False

Executable demo-sequence
  Main-Is: demo/sliceSignals/Demo_Sequence.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      gnuplot,
      efa,
      containers,
      utility-ht,
      gnuplot,
      base
  Else
    Buildable: False

Executable demo-add-zerocrossings
  Main-Is: demo/sliceSignals/Demo_addZeroCrossings.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      gnuplot,
      efa,
      containers,
      utility-ht,
      gnuplot,
      base
  Else
    Buildable: False

Executable demo-slice-signals-alt
  Main-Is: demo/sliceSignals/Demo_sliceSignals_alt.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      containers,
      utility-ht,
      gnuplot,
      base
  Else
    Buildable: False

Executable demo-slice-signals
  Main-Is: demo/sliceSignals/Demo_sliceSignals.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      containers,
      utility-ht,
      gnuplot,
      base
  Else
    Buildable: False

Executable demo-slice-zerocross-signals
  Main-Is: demo/sliceSignals/Demo_sliceZeroCrossSignals.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      containers,
      utility-ht,
      gnuplot,
      base
  Else
    Buildable: False

Executable demo-undir-edge
  Main-Is: demo/undirEdge/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-csv-import
  Main-Is: demo/csvImport/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      utility-ht,
      base
  Else
    Buildable: False

Executable demo-plt-import
  Main-Is: demo/pltImport/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-ascii-import
  Main-Is: demo/asciiImport/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-ratio
  Main-Is: demo/ratio/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-pretty
  Main-Is: demo/pretty/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base,
      containers
  Else
    Buildable: False

Executable demo-node-definition
  Main-Is: demo/nodeDefinition/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base,
      containers
  Else
    Buildable: False

Executable demo-state-analysis
  Main-Is: demo/stateAnalysis/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
     Build-Depends:
       efa,
       utility-ht,
       containers,
       base
  Else
    Buildable: False

Executable demo-function-eta
  Main-Is: demo/functionEta/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
     Build-Depends:
       efa,
       base
  Else
    Buildable: False

Executable demo-lookup-eta
  Main-Is: demo/lookupEta/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
     Build-Depends:
       efa,
       base
  Else
    Buildable: False

Executable demo-delta-logic
  Main-Is: demo/deltaLogic/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-cumulated-flow
  Main-Is: demo/cumulatedFlow/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-state-flow
  Main-Is: demo/stateFlow/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-distribution
  Main-Is: demo/distribution/Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  If flag(buildDemos)
    Build-Depends:
      efa,
      containers,
      base
  Else
    Buildable: False
