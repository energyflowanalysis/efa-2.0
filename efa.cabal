Name:                efa
Version:             2.1
Synopsis:            Energy flow analysis
Description:         Energy flow analysis
Homepage:            http://energiefluss.info/
License:             AllRightsReserved
License-File:        LICENSE
Author:              Ingenieurbüro Guttenberg & Hördegen
Maintainer:          guttenberg@energiefluss.info
-- Copyright:           
Category:            Engineering
Build-type:          Simple
Cabal-version:       >=1.8

Flag buildTests
  Description: build test suite (makes trouble with TemplateHaskell and dynamic linking)
  Default: True

Flag buildExamples
  Description: Build complex examples
  Default: True

Flag buildDemos
  Description: Build demonstrations of single library features
  Default: True

Flag buildTools
  Description: Build tools
  Default: True

Library
  Build-Depends:
    graphviz >=2999.13 && <2999.15,
    vector ==0.9.*,
    fingertree-psqueue >=0.3 && <0.4,
    fingertree >=0.0 && <0.1,
    gnuplot >=0.5.1 && <0.6,
    text ==0.11.*,
    pretty-show >=1.2 && <1.3,
    pretty ==1.1.*,
    random ==1.0.*,
    Stream >=0.4.6 && <0.5,
    non-empty >=0.0.1 && <0.1,
    containers >=0.4 && <0.6,
    data-accessor-transformers >=0.2.1 && <0.3,
    data-accessor >=0.2.2 && <0.3,
    utility-ht ==0.0.*,
    QuickCheck >=2.4 && <2.6,
    transformers >= 0.3 && < 0.4,
    unique-logic >= 0.2 && < 0.3,
    parsec ==3.1.2,
    base ==4.5.*
  Hs-Source-Dirs:      src
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs
  Exposed-Modules:
    EFA.IO.CSVImport
    EFA.IO.ASCIIImport
    EFA.IO.CSVParser
    EFA.IO.PLTImport
    EFA.IO.PLTParser
    EFA.Utility
    EFA.Utility.Async
    EFA.Utility.Stream
    EFA.Utility.Trace
    EFA.Signal.Base
    EFA.Signal.SequenceData
    EFA.Signal.Typ
    EFA.Signal.Data
    EFA.Signal.Vector
    EFA.Signal.Record
    EFA.Signal.Signal
    EFA.Signal.SignalFill
    EFA.Signal.Sequence
    EFA.Signal.Plot
    EFA.Symbolic.OperatorTree
    EFA.Symbolic.SumProduct
    EFA.Report.Typ
    EFA.Report.Base
    EFA.Report.Report
    EFA.Report.Format
    EFA.Report.FormatValue
    EFA.Graph
    EFA.Graph.Draw
    EFA.Graph.Topology
    EFA.Graph.Topology.Index
    EFA.Graph.Topology.Node
    EFA.Graph.Topology.StateAnalysis
    EFA.Graph.Flow
    EFA.Equation.System
    EFA.Equation.Result
    EFA.Equation.Env
    EFA.Equation.Variable
    EFA.Example.Utility
  Other-Modules:
    EFA.Symbolic.OperatorTreeTest


-- sollte man auf Cabal-Test umstellen,
-- sobald Cabal-Test vernünftig läuft
Executable test-efa
  Main-Is: EFA/Test/Test.hs
  GHC-Options: -Wall
  Hs-Source-Dirs: test
  If flag(buildTests)
    Build-Depends:
      efa,
      QuickCheck,
      containers,
      utility-ht,
      template-haskell ==2.7.*,
      base
  Else
    Buildable: False
  Other-Modules:
    EFA.Test.UtilsTest
    EFA.Test.SequenceTest

Executable sequenzflussgraph
  Main-Is: examples/elementary/sequenzflussgraph/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      utility-ht,
      base
  Else
    Buildable: False

Executable optimisingstorage
  Main-Is: examples/elementary/optimisingStorage/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      utility-ht,
      base
  Else
    Buildable: False



Executable demo-signalcalc
  Main-Is: demo/Signal/Demo_SignalCalc.hs
  GHC-Options: -Wall
  If flag(buildDemos)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-sequence
  Main-Is: demo/sliceSignals/Demo_Sequence.hs
  GHC-Options: -Wall
  If flag(buildDemos)
    Build-Depends:
      efa,
      containers,
      utility-ht,
      gnuplot,
      base
  Else
    Buildable: False



Executable demo-addzerocrossings
  Main-Is: demo/sliceSignals/Demo_addZeroCrossings.hs
  GHC-Options: -Wall
  If flag(buildDemos)
    Build-Depends:
      efa,
      containers,
      utility-ht,
      gnuplot,
      base
  Else
    Buildable: False



Executable demo-slicesignals-alt
  Main-Is: demo/sliceSignals/Demo_sliceSignals_alt.hs
  GHC-Options: -Wall
  If flag(buildDemos)
    Build-Depends:
      efa,
      containers,
      utility-ht,
      gnuplot,
      base
  Else
    Buildable: False


Executable demo-slicesignals
  Main-Is: demo/sliceSignals/Demo_sliceSignals.hs
  GHC-Options: -Wall
  If flag(buildDemos)
    Build-Depends:
      efa,
      containers,
      utility-ht,
      gnuplot,
      base
  Else
    Buildable: False


Executable demo-slicezerocrosssignals
  Main-Is: demo/sliceSignals/Demo_sliceZeroCrossSignals.hs
  GHC-Options: -Wall
  If flag(buildDemos)
    Build-Depends:
      efa,
      containers,
      utility-ht,
      gnuplot,
      base
  Else
    Buildable: False



Executable demo-numericSolving
  Main-Is: examples/elementary/numericSolving/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-symbolicSolving
  Main-Is: examples/elementary/symbolicSolving/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-twoways
  Main-Is: examples/elementary/twoWays/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-undiredge
  Main-Is: demo/undirEdge/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-csvimport
  Main-Is: demo/CSVImport/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-pltimport
  Main-Is: demo/PLTImport/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False


Executable demo-asciiimport
  Main-Is: demo/ASCIIImport/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-ratio
  Main-Is: demo/ratio/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      base
  Else
    Buildable: False

Executable demo-pretty
  Main-Is: demo/pretty/Demo_Report.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      base,
      containers
  Else
    Buildable: False


Executable demo-nodedefinition
  Main-Is: demo/nodeDefinition/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      base,
      containers
  Else
    Buildable: False


Executable example-vehicle
  Hs-Source-Dirs: examples/vehicle/src
  Main-Is: Main.hs
  Other-Modules:
    Modules.Plots
    Modules.Signals
    Modules.System
    Modules.Topology
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa,
      gnuplot,
      base,
      containers
  Else
    Buildable: False
 

Executable demo-stateanalysis
  Main-Is: demo/stateAnalysis/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
     Build-Depends:
       efa,
       base,
       containers
  Else
    Buildable: False
 
Executable demo-readandcut
  Main-Is: examples/elementary/readAndCut/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
     Build-Depends:
       efa,
       base,
       containers
  Else
    Buildable: False

