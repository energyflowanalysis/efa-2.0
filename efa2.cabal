Name:                efa2
Version:             0.1
Synopsis:            Energy flow analysis
Description:         Energy flow analysis
Homepage:            http://energiefluss.info/
License:             AllRightsReserved
License-File:        LICENSE
Author:              Ingenieurbüro Guttenberg & Hördegen
Maintainer:          guttenberg@energiefluss.info
-- Copyright:           
Category:            Engineering
Build-type:          Simple
Cabal-version:       >=1.8

Flag buildTests
  Description: build test suite (makes trouble with TemplateHaskell and dynamic linking)
  Default: True

Flag buildExamples
  Description: Build complex examples
  Default: True

Flag buildDemos
  Description: Build demonstrations of single library features
  Default: True

Flag buildTools
  Description: Build tools
  Default: True

Library
  Build-Depends:
    graphviz >=2999.13 && <2999.15,
    vector ==0.9.*,
    fingertree-psqueue >=0.3 && <0.4,
    fingertree >=0.0 && <0.1,
    gnuplot >=0.5.1 && <0.6,
    text ==0.11.*,
    pretty-show >=1.2 && <1.3,
    pretty ==1.1.*,
    template-haskell ==2.7.*,
    random ==1.0.*,
    Stream >=0.4.6 && <0.5,
    non-empty >=0.0.1 && <0.1,
    containers >=0.4 && <0.6,
    data-accessor-transformers >=0.2.1 && <0.3,
    data-accessor >=0.2.2 && <0.3,
    utility-ht ==0.0.*,
    QuickCheck >=2.4 && <2.6,
    transformers >= 0.3 && < 0.4,
    unique-logic >= 0.2 && < 0.3,
    base ==4.5.*
  Hs-Source-Dirs:      src
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs
  Exposed-Modules:
    EFA2.IO.Import
    EFA2.Utility
    EFA2.Utility.Stream
    EFA2.Utility.Trace
    EFA2.Signal.Base
    EFA2.Signal.SequenceData
    EFA2.Signal.Typ
    EFA2.Signal.Data
    EFA2.Signal.Vector
    EFA2.Signal.Signal
    EFA2.Signal.SignalFill
    EFA2.Signal.Sequence
    EFA2.Signal.Plot
    EFA2.Symbolic.OperatorTree
    EFA2.Symbolic.SumProduct
    EFA2.Report.Typ
    EFA2.Report.Base
    EFA2.Report.Report
    EFA2.Report.Format
    EFA2.Report.FormatValue
    EFA2.Graph
    EFA2.Graph.Draw
    EFA2.Graph.Topology
    EFA2.Graph.Topology.Index
    EFA2.Graph.Topology.StateAnalysis
    EFA2.Graph.Flow
    EFA2.Equation.System
    EFA2.Equation.Env
    EFA2.Equation.Variable
    EFA2.Example.Utility
  Other-Modules:
    EFA2.Symbolic.OperatorTreeTest


-- sollte man auf Cabal-Test umstellen,
-- sobald Cabal-Test vernünftig läuft
Executable test-efa
  Main-Is: EFA2/Test/Test.hs
  GHC-Options: -Wall
  Hs-Source-Dirs: test
  If flag(buildTests)
    Build-Depends:
      efa2,
      QuickCheck,
      containers,
      utility-ht,
      base
  Else
    Buildable: False
  Other-Modules:
    EFA2.Test.UtilsTest
    EFA2.Test.SequenceTest

Executable sequenzflussgraph
  Main-Is: examples/elementary/sequenzflussgraph/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa2,
      utility-ht,
      base
  Else
    Buildable: False

Executable demo-signalcalc
  Main-Is: demo/Signal/Demo_SignalCalc.hs
  GHC-Options: -Wall
  If flag(buildDemos)
    Build-Depends:
      efa2,
      base
  Else
    Buildable: False

Executable demo-sequence
  Main-Is: demo/sliceSignals/Demo_Sequence.hs
  GHC-Options: -Wall
  If flag(buildDemos)
    Build-Depends:
      efa2,
      containers,
      array >=0.4 && <0.5,
      gnuplot,
      utility-ht,
      base
  Else
    Buildable: False

Executable demo-newsolver
  Main-Is: examples/elementary/newSolver/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa2,
      base
  Else
    Buildable: False

Executable demo-newsolversymbolic
  Main-Is: examples/elementary/newSolverSymbolic/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa2,
      base
  Else
    Buildable: False

Executable makestub
  Main-Is: sandbox/dot/Main.hs
  GHC-Options: -Wall
  If flag(buildTools)
    Build-Depends:
      haskell-src-exts == 1.13.5,
      text == 0.11.2.0,
      graphviz == 2999.14.1.0.1,
      containers == 0.4.2.1,
      base
  Else
    Buildable: False
