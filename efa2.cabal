Name:                efa2
Version:             0.1
Synopsis:            Energy flow analysis
Description:         Energy flow analysis
Homepage:            http://energiefluss.info/
License:             AllRightsReserved
License-File:        LICENSE
Author:              Philipp Guttenberg
Maintainer:          guttenberg@energiefluss.info
-- Copyright:           
Category:            Engineering
Build-type:          Simple
Cabal-version:       >=1.8

Flag buildTests
  Description: build test suite (makes trouble with TemplateHaskell and dynamic linking)
  Default: True

Flag buildExamples
  Description: Build complex examples
  Default: True

Flag buildDemos
  Description: Build demonstrations of single library features
  Default: True

Library
  Build-Depends:
    graphviz ==2999.13.*,
    fgl ==5.4.*,
    vector ==0.9.*,
    gnuplot >=0.5.1 && <0.6,
    text ==0.11.*,
    pretty-show >=1.2 && <1.3,
    pretty ==1.1.*,
    template-haskell ==2.7.*,
    process ==1.1.*,
    random ==1.0.*,
    Stream >=0.4.6 && <0.5,
    non-empty >=0.0 && <0.1,
    containers >=0.4 && <0.6,
    utility-ht ==0.0.*,
    QuickCheck >=2.4 && <2.6,
    base ==4.5.*
  Hs-Source-Dirs:      src
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs
  Exposed-Modules:
    EFA2.IO.Import
    EFA2.IO.FileSave
    EFA2.Utils.Utils
    EFA2.Utils.Graph
    EFA2.Utils.Trace
    EFA2.StateAnalysis.StateAnalysis
    EFA2.Signal.Index
    EFA2.Signal.Base
    EFA2.Signal.SequenceData
    EFA2.Signal.Typ
    EFA2.Signal.Data
    EFA2.Signal.Vector
    EFA2.Signal.Signal
    EFA2.Signal.SignalFill
    EFA2.Signal.Sequence
    EFA2.Solver.IsVar
    EFA2.Solver.Equation
    EFA2.Solver.Horn
    EFA2.Solver.EquationOrder
    EFA2.Solver.DependencyGraph
    EFA2.Display.Plot
    EFA2.Display.DispTyp
    EFA2.Display.DispBase
    EFA2.Display.DispSignal
    EFA2.Display.Report
    EFA2.Topology.TopologyData
-- gibt 4 Argumente an NLabel obwohl das nur (noch) 3 hat
--    EFA2.Topology.RandomTopology
    EFA2.Topology.EfaGraph
    EFA2.Topology.Flow
    EFA2.Topology.Topology
    EFA2.Topology.Draw
    EFA2.Example.Examples
    EFA2.Example.LinearOne
    EFA2.Example.LinearTwo
-- EFA2.Graph-Verzeichnis fehlt
--    EFA2.Example.Circular
-- einige Typen passen nicht
--    EFA2.Example.Linear
    EFA2.Example.Dreibein
    EFA2.Example.Loop
    EFA2.Example.SymSig
    EFA2.Example.Dreibein2
    EFA2.Example.Dreibein3
-- einige Typen passen nicht
--    EFA2.Example.Vierbein
--    EFA2.Example.Zweibein
--    EFA2.Example.LinearX
    EFA2.Interpreter.Env
-- cst nicht importiert
--    EFA2.Interpreter.Eta
    EFA2.Interpreter.Arith
    EFA2.Interpreter.Interpreter
    EFA2.Interpreter.InTerm
  Other-Modules:
    EFA2.Solver.EquationTest


-- sollte man auf Cabal-Test umstellen,
-- sobald Cabal-Test vernünftig läuft
Executable test-efa
  Main-Is: EFA2/Test/Test.hs
  GHC-Options: -Wall
  Hs-Source-Dirs: test
  If flag(buildTests)
    Build-Depends:
      efa2,
      QuickCheck,
      containers,
      utility-ht,
      base
  Else
    Buildable: False
  Other-Modules:
    EFA2.Test.UtilsTest
    EFA2.Test.SequenceTest
-- benötigt RandomTopology
--    EFA2.Test.SolverTest
--    EFA2.Test.IsVarTest

Executable sequenzflussgraph
  Main-Is: examples/elementary/sequenzflussgraph/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa2,
      utility-ht,
      base
  Else
    Buildable: False

Executable threewaysto
  Main-Is: examples/elementary/threeWaySto_pred/Main_ThreeWay_sto_alt.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa2,
      process,
      fgl,
      containers,
      base
  Else
    Buildable: False

Executable additive_terms
  Main-Is: examples/elementary/additive_terms/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa2,
      containers,
      base
  Else
    Buildable: False

Executable vierbein_delta
  Main-Is: examples/elementary/vierbein_delta/Main.hs
  GHC-Options: -Wall
  If flag(buildExamples)
    Build-Depends:
      efa2,
      fgl,
      containers,
      base
  Else
    Buildable: False

Executable demo-signalcalc
  Main-Is: demo/Signal/Demo_SignalCalc.hs
  GHC-Options: -Wall
  If flag(buildDemos)
    Build-Depends:
      efa2,
      base
  Else
    Buildable: False

Executable demo-sequence
  Main-Is: demo/sliceSignals/Demo_Sequence.hs
  GHC-Options: -Wall
  If flag(buildDemos)
    Build-Depends:
      efa2,
      array >=0.4 && <0.5,
      gnuplot,
      utility-ht,
      containers,
      array >=0.4 && <0.5,
      gnuplot,
      utility-ht,
      base
  Else
    Buildable: False

Executable demo-vierbein
  Main-Is: demo/vierbein/Main.hs
  GHC-Options: -Wall
  If flag(buildDemos)
    Build-Depends:
      efa2,
      fgl,
      containers,
      base
  Else
    Buildable: False
